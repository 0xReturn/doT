Created in search of the fast and concise JavaScript templating function with emphasis on performance under V8 and nodejs.

	doT.js is based on templating function extracted from excellent jQuery plugin jQote2 with some modifications.
	doT.js can be used with nodejs, allows for custom template delimiters and only allows direct invocation of the compiled function.

	doU.js is a blend of underscore.js and jQote2 templating functions.

	Addditional advantage of jQote2 technique is that it allows you to flush data to the stream at any point in the generated template function, this is handy when using on server.

	Both doT.js and doU.js can be used with node or without.

Benchmarks:
	jslitmus is used for benchmarking.

To run the benchmarks for measuring execution of compiled templates:

	In the browser:
		navigate to benchmarks/index.html
		or go to http://olado.github.com/doT/bench.html

	With node:
		node benchmarks/templatesBench.js

To run the benchmarks for measuring compilation speed:

	In the browser:
		navigate to benchmarks/genspeed.html

	With node:
		node benchmarks/compileBench.js


Install doT:
	npm install dot

	// use require('dot') in your code if you installed with npm

Usage:
	Default delimiters:
		{{= }} for interpolation,
		{{ }} for evaluation,
		{{! }} for interpolation with encoding

	Other delimiters may be configured.

	Sample:
	// 1. Compile template function
	var tempFn = doT.template("<h1>Here is a sample template {{=it.foo}} </h1>");
	// 2. Use template function as many times as you like
	var resultText = tempFn({foo: 'with doT'});


